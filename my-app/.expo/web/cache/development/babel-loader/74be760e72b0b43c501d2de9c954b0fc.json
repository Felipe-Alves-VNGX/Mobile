{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Button } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AlterarContato(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState();\n  var _useState2 = _slicedToArray(_useState, 2);\n  getNome = _useState2[0];\n  setNome = _useState2[1];\n  var _useState3 = useState();\n  var _useState4 = _slicedToArray(_useState3, 2);\n  getCpf = _useState4[0];\n  setCpf = _useState4[1];\n  var _useState5 = useState();\n  var _useState6 = _slicedToArray(_useState5, 2);\n  getTelefone = _useState6[0];\n  setTelefone = _useState6[1];\n  var _useState7 = useState();\n  var _useState8 = _slicedToArray(_useState7, 2);\n  getId = _useState8[0];\n  setId = _useState8[1];\n  var _useState9 = useState();\n  var _useState10 = _slicedToArray(_useState9, 2);\n  getAlterar = _useState10[0];\n  setAlterar = _useState10[1];\n  useEffect(function () {\n    if (route.params) {\n      var nome = route.params.nome;\n      var telefone = route.params.telefone;\n      var cpf = route.params.cpf;\n      var id = route.params.id;\n      var alterar = route.params.alterar;\n      setNome(nome);\n      setTelefone(telefone);\n      setCpf(cpf);\n      setId(id);\n      setAlterar(alterar);\n    }\n  }, []);\n  return _jsxs(View, {\n    style: Styles.container,\n    children: [_jsx(Text, {\n      children: getItem\n    }), _jsx(Input, {\n      label: \"nome\"\n    }), _jsx(Input, {\n      label: \"Telefone\",\n      secureTextEntry: true\n    }), _jsx(Button, {\n      title: \"Salvar\",\n      containerStyle: {\n        color: \"red\"\n      },\n      onPress: function onPress() {\n        return navigation.navigate('Inicio');\n      }\n    })]\n  });\n}\n;\nvar Styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useEffect","useState","Input","Button","AlterarContato","navigation","route","getNome","setNome","getCpf","setCpf","getTelefone","setTelefone","getId","setId","getAlterar","setAlterar","params","nome","telefone","cpf","id","alterar","Styles","container","getItem","color","navigate","StyleSheet","create","flex"],"sources":["/home/aluno/Área de Trabalho/Mobile/my-app/Screens/AlterarContato.js"],"sourcesContent":["import { useEffect,useState } from 'react';\nimport { StyleSheet, Text, View, } from 'react-native';\nimport {Input,Button } from 'react-native-elements';\n\nexport default function AlterarContato({navigation,route}) {\n    [getNome,setNome] = useState();\n    [getCpf,setCpf] = useState();\n    [getTelefone,setTelefone] = useState();\n    [getId,setId] = useState();\n    [getAlterar,setAlterar] = useState();\n\n\n    useEffect(()=>{\n      if(route.params){\n            const { nome } =  route.params \n            const { telefone } =  route.params \n            const { cpf } =  route.params \n            const { id } =  route.params\n            const { alterar } =  route.params\n\n            setNome(nome)\n            setTelefone(telefone)\n            setCpf(cpf)\n            setId(id)\n            setAlterar(alterar)\n\n      }\n    },[]) \n    return (\n        <View style={Styles.container}>\n        <Text>{getItem}</Text>\n        <Input label={\"nome\"} />    \n        <Input label={\"Telefone\"} secureTextEntry={true} />\n        <Button title={\"Salvar\"} containerStyle={{color:\"red\"}} onPress={() => navigation.navigate('Inicio')}/>\n        </View>\n    );\n};\n\nconst Styles = StyleSheet.create({\n    container:{\n        flex:1\n\n    }\n})"],"mappings":";AAAA,SAASA,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAE3C,SAAQC,KAAK,EAACC,MAAM,QAAQ,uBAAuB;AAAC;AAAA;AAEpD,eAAe,SAASC,cAAc,OAAqB;EAAA,IAAnBC,UAAU,QAAVA,UAAU;IAACC,KAAK,QAALA,KAAK;EAAA,gBAChCL,QAAQ,EAAE;EAAA;EAA7BM,OAAO;EAACC,OAAO;EAAA,iBACEP,QAAQ,EAAE;EAAA;EAA3BQ,MAAM;EAACC,MAAM;EAAA,iBACcT,QAAQ,EAAE;EAAA;EAArCU,WAAW;EAACC,WAAW;EAAA,iBACRX,QAAQ,EAAE;EAAA;EAAzBY,KAAK;EAACC,KAAK;EAAA,iBACcb,QAAQ,EAAE;EAAA;EAAnCc,UAAU;EAACC,UAAU;EAGtBhB,SAAS,CAAC,YAAI;IACZ,IAAGM,KAAK,CAACW,MAAM,EAAC;MACV,IAAQC,IAAI,GAAMZ,KAAK,CAACW,MAAM,CAAtBC,IAAI;MACZ,IAAQC,QAAQ,GAAMb,KAAK,CAACW,MAAM,CAA1BE,QAAQ;MAChB,IAAQC,GAAG,GAAMd,KAAK,CAACW,MAAM,CAArBG,GAAG;MACX,IAAQC,EAAE,GAAMf,KAAK,CAACW,MAAM,CAApBI,EAAE;MACV,IAAQC,OAAO,GAAMhB,KAAK,CAACW,MAAM,CAAzBK,OAAO;MAEfd,OAAO,CAACU,IAAI,CAAC;MACbN,WAAW,CAACO,QAAQ,CAAC;MACrBT,MAAM,CAACU,GAAG,CAAC;MACXN,KAAK,CAACO,EAAE,CAAC;MACTL,UAAU,CAACM,OAAO,CAAC;IAEzB;EACF,CAAC,EAAC,EAAE,CAAC;EACL,OACI,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,WAC9B,KAAC,IAAI;MAAA,UAAEC;IAAO,EAAQ,EACtB,KAAC,KAAK;MAAC,KAAK,EAAE;IAAO,EAAG,EACxB,KAAC,KAAK;MAAC,KAAK,EAAE,UAAW;MAAC,eAAe,EAAE;IAAK,EAAG,EACnD,KAAC,MAAM;MAAC,KAAK,EAAE,QAAS;MAAC,cAAc,EAAE;QAACC,KAAK,EAAC;MAAK,CAAE;MAAC,OAAO,EAAE;QAAA,OAAMrB,UAAU,CAACsB,QAAQ,CAAC,QAAQ,CAAC;MAAA;IAAC,EAAE;EAAA,EAChG;AAEf;AAAC;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAM,CAAC;EAC7BL,SAAS,EAAC;IACNM,IAAI,EAAC;EAET;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}